{"version":3,"sources":["context.js","components/pinicon/index.js","components/modal/index.js","graphql/client.js","graphql/queries.js","graphql/mutations.js","graphql/subscriptions.js","components/map/index.js","pages/home.js","reducer.js","App.js","serviceWorker.js","index.js"],"names":["context","createContext","pinIcon","color","pins","draftPin","currentPin","liveLocation","liveLocations","icons","faCoffee","faStreetView","faMotorcycle","faPlane","faCar","faBus","faHome","colors","PinIcon","_ref","icon","state","useContext","Context","console","log","react_default","a","createElement","className","style","index_es","PinMarker","fontSize","faMapMarkerAlt","MapMarkedIcon","faMapMarkedAlt","EyeIcon","faEye","EyeSlash","faEyeSlash","Modal","children","client","GraphQLClient","GET_PINS","GET_LIVE_LOCATIONS_QUERY","CREATE_PIN_MUTATION","CREATE_LIVE_LOCATION_MUTATION","UPDATE_LIVE_LOCATION_MUTATION","DELETE_LIVE_LOCATION_MUTATION","PIN_ADDED_SUBSCRIPTION","gql","_templateObject","LIVE_LOCATION_ADDED_SUBSCRIPTION","_templateObject2","LIVE_LOCATION_UPDATED_SUBSCRIPTION","_templateObject3","LIVE_LOCATION_DELETED_SUBSCRIPTION","_templateObject4","Map","modalOpen","liveLocationModal","_useContext","dispatch","_useState","useState","latitude","longitude","zoom","_useState2","Object","slicedToArray","viewport","setViewport","getPins","_ref2","asyncToGenerator","regenerator_default","mark","_callee","_ref3","wrap","_context","prev","next","Client","request","sent","type","payload","stop","apply","this","arguments","getLiveLocations","_ref4","_callee2","_ref5","_context2","useEffect","options","enableHighAccuracy","timeout","maximumAge","_useState3","_useState4","popUp","setPopup","_useState5","_useState6","modal","setModal","_useState7","_useState8","userPosition","setUserPosition","clearWatch","getUserPosition","navigator","geolocation","getCurrentPosition","_ref6","coords","objectSpread","err","code","markerClick","pin","id","_ref7","StopWatchLocation","_ref8","_callee3","variables","_context3","_id","deleteLiveLocation","components_modal","onClick","esm","assign","e","_e$lngLat","lngLat","lng","lat","handleMapClick","onViewportChange","newViewport","width","height","mapStyle","mapboxApiAccessToken","pinicon_PinIcon","offsetTop","offsetLeft","pinicon_PinMarker","map","key","location","coordinates","category","closeButton","closeOnClick","onClose","anchor","margin","fontWeight","name","pinicon_MapMarkedIcon","pinicon_EyeIcon","pinicon_EyeSlash","react_apollo_esm","subscription","onSubscriptionData","_ref10","pinAdded","subscriptionData","data","_ref11","liveLocationAdded","_ref12","liveLocationUpdated","_ref13","liveLocationDeleted","Home","errModal","setErrModal","setLiveLocation","setIcon","_useState9","_useState10","allowLocation","_useState11","_useState12","setName","handleSubmit","random","_state$draftPin","createPin","abrupt","Math","round","Number","handleLiveLocation","_state$liveLocation","addLiveLocation","watchUserPosition","watchPosition","updateLiveLocation","_x","inputs","placeholder","onChange","target","value","src_components_map","allowLoc","reducer","action","newPin","prevPins","filter","concat","toConsumableArray","deletedLocation","LiveLocations","newLocation","prevLocations","updateLocation","updatedLiveLocations","length","wsLink","SubscriptionClient","reconnect","link","WebSocketLink","ApolloClient","cache","InMemoryCache","App","initialState","_useReducer","useReducer","Reducer","_useReducer2","react_router_dom","src_context","Provider","react_router","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94e07607.chunk.js","sourcesContent":["import {createContext} from 'react'\n\nconst context = createContext({\npinIcon:2,\ncolor:1,\npins:null,\ndraftPin:null,\ncurrentPin:null,\nliveLocation:null,\nliveLocations:null\n})\n\nexport default context;","import React,{useContext} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoffee,faStreetView,faMotorcycle,faBus,faCar,faPlane, faHome,faMapMarkerAlt,faMapMarkedAlt,faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\nimport './pinicon.css';\nimport Context from '../../context'\n\nconst icons = [faCoffee,faStreetView,faMotorcycle,faPlane,faCar,faBus,faHome]\nconst colors = [\"Black\",\"Blue\",\"BlueViolet\",\"Brown\",\"CadetBlue\",\"Chartreuse\",\"Chocolate\",\"Coral\",\"CornflowerBlue\",\"Crimson\",\"DarkBlue\",\"DarkCyan\",\"DarkGoldenRod\",\"DarkGreen\",\"DarkMagenta\",\"DarkOliveGreen\",\"DarkOrange\",\"DarkOrchid\",\"DarkRed\",\"DarkSalmon\",\"DarkSlateBlue\",\"DarkSlateGray\",\"DarkSlateGrey\",\"DarkViolet\",\"DeepPink\",\"DimGray\",\"DimGrey\",\"DodgerBlue\",\"FireBrick\",\"ForestGreen\",\"Fuchsia\",\"GoldenRod\",\"Gray\",\"Grey\",\"Green\",\"HotPink\",\"IndianRed\",\"Indigo\",\"LawnGreen\",\"LightCoral\",\"LightSalmon\",\"LightSeaGreen\",\"LightSlateGray\",\"LightSlateGrey\",\"Lime\",\"LimeGreen\",\"Magenta\",\"Maroon\",\"MediumAquaMarine\",\"MediumBlue\",\"MediumOrchid\",\"MediumPurple\",\"MediumSeaGreen\",\"MediumSlateBlue\",\"MediumVioletRed\",\"MidnightBlue\",\"Navy\",\"Olive\",\"OliveDrab\",\"Orange\",\"OrangeRed\",\"Orchid\",\"PaleVioletRed\",\"Peru\",\"Plum\",\"Purple\",\"RebeccaPurple\",\"Red\",\"RosyBrown\",\"RoyalBlue\",\"SaddleBrown\",\"Salmon\",\"SeaGreen\",\"Sienna\"]\nexport const PinIcon = ({icon,color}) => {\n    const {state} = useContext(Context)\nconsole.log(icons[state.pinIcon])\nreturn(\n    <div className='pinMarker'>\n    <div className='icon' style={{color:colors[color]}}>\n    <FontAwesomeIcon  icon={icons[icon]} />\n    </div>\n    </div>\n)\n}\n\nexport const PinMarker = (color)=>{\n    return(\n        <div className='pinMarker'>\n        <div className='icon' style={{color:colors[4],fontSize:'1.5em'}}>\n        <FontAwesomeIcon  icon={faMapMarkerAlt} />\n        </div>\n        </div>  \n    )\n}\nexport const MapMarkedIcon = () => {\n    return(\n        <FontAwesomeIcon  icon={faMapMarkedAlt} /> \n    )\n}\nexport const EyeIcon = () => {\n    return(\n        <FontAwesomeIcon  icon={faEye} /> \n    )\n}\nexport const EyeSlash = () => {\n    return(\n        <FontAwesomeIcon  icon={faEyeSlash} /> \n    )\n}\n\n","import React from 'react';\nimport './modal.css'\n\n\nfunction Modal({children}) {\nreturn (\n    <div className=\"modal\">\n    {children}\n    </div>\n)\n}\n\nexport default Modal","import { GraphQLClient } from 'graphql-request';\n\nconst client =  new GraphQLClient('https://radiant-lake-34932.herokuapp.com/graphql')\n\nexport { client as default}","export const GET_PINS= `\nquery {\n    getPins{\n        _id\n        name\n        category\n        color\n        location {\n            type\n            coordinates\n        }\n    }\n}\n`\n\nexport const GET_LIVE_LOCATIONS_QUERY = `\nquery {\n    getLiveLocations{\n        _id\n        name\n        category\n        location {\n            type\n            coordinates\n        }\n    }\n}\n`","export const CREATE_PIN_MUTATION = `\nmutation($name:String,$lng:Float,$lat:Float,$color:Int,$category:Int,$type:String) {\n    createPin(data:{\n        name:$name,\n        color:$color,\n        category:$category,\n        location:{\n            type:$type,\n            coordinates:[$lng,$lat]\n        }\n    }) {\n        _id\n        name\n        color\n        category\n        location{\n            type\n            coordinates\n        }\n    }\n}\n`\n\nexport const CREATE_LIVE_LOCATION_MUTATION = `\nmutation($name:String,$category:Int,$lat:Float,$lng:Float,$type:String) {\n    addLiveLocation(data:{\n        name:$name,\n        category:$category,\n        location:{\n            type:$type,\n            coordinates:[$lng,$lat]\n        }\n    }){\n        _id\n        name\n        category\n        location{\n            type\n            coordinates\n        }\n    }\n}\n`\n\nexport const UPDATE_LIVE_LOCATION_MUTATION = `\nmutation($id:ID,$lng:Float,$lat:Float){\n    updateLiveLocation(id:$id,lng:$lng,lat:$lat){\n        _id\n        name\n        category\n        location{\n            type\n            coordinates\n        } \n    }\n}\n`\nexport const DELETE_LIVE_LOCATION_MUTATION = `\nmutation($id:ID){\n    deleteLiveLocation(id:$id){\n        _id\n    }\n}\n`","import gql from 'graphql-tag'\n\nexport const PIN_ADDED_SUBSCRIPTION = gql`\nsubscription {\npinAdded {\n    _id\n        name\n        color\n        category\n        location{\n            type\n            coordinates\n        }\n}\n}\n`\n\nexport const LIVE_LOCATION_ADDED_SUBSCRIPTION = gql`\nsubscription {\nliveLocationAdded {\n    _id\n        name\n        category\n        location{\n            type\n            coordinates\n        }\n}\n}\n`\nexport const LIVE_LOCATION_UPDATED_SUBSCRIPTION = gql`\nsubscription {\nliveLocationUpdated {\n    _id\n        name\n        category\n        location{\n            type\n            coordinates\n        }\n}\n}\n`\nexport const LIVE_LOCATION_DELETED_SUBSCRIPTION = gql`\nsubscription {\nliveLocationDeleted {\n    _id\n}\n}\n`","import React,{useState, useEffect, useContext} from 'react'\nimport ReactMapGL, {NavigationControl, Marker, Popup} from 'react-map-gl'\nimport './map.css'\nimport './index.css'\nimport {PinIcon,PinMarker,MapMarkedIcon,EyeIcon,EyeSlash} from '../pinicon/index';\nimport Modal from '../modal/index';\nimport Client from '../../graphql/client'\nimport { GET_PINS,GET_LIVE_LOCATIONS_QUERY } from '../../graphql/queries'\nimport { DELETE_LIVE_LOCATION_MUTATION } from '../../graphql/mutations'\nimport {PIN_ADDED_SUBSCRIPTION,LIVE_LOCATION_ADDED_SUBSCRIPTION,LIVE_LOCATION_UPDATED_SUBSCRIPTION,LIVE_LOCATION_DELETED_SUBSCRIPTION} from '../../graphql/subscriptions'\nimport { Subscription } from 'react-apollo'\n\nimport Context from '../../context'\n\n\nfunction Map({modalOpen,liveLocationModal}) {\n    const {state,dispatch} = useContext(Context)\n    const [viewport,setViewport] = useState({\n        latitude: 26.5363,\n        longitude: 88.0803,\n        zoom: 13 \n    })\n    const getPins = async () =>{\n        const { getPins } = await Client.request(GET_PINS)\n        dispatch({type:'ALL_PINS',payload:getPins})\n    }\n    const getLiveLocations = async () =>{\n        const { getLiveLocations } = await Client.request(GET_LIVE_LOCATIONS_QUERY)\n        dispatch({type:'LIVE_LOCATIONS',payload:getLiveLocations})\n    }\n    useEffect(()=>{\n        getPins()\n    },[])\n    useEffect(()=>{\n        getLiveLocations()\n    },[])\n    const options = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      };\n      const [popUp,setPopup] = useState(null)\n     const [modal,setModal] = useState(false)\n    const [userPosition,setUserPosition] =useState(null)\n    useEffect(()=>{\n            clearWatch()\n            getUserPosition()\n    },[])\n\n    const getUserPosition = () => {\n        if('geolocation' in navigator) {\n            navigator.geolocation.getCurrentPosition(\n                ({coords})=>{\n                   const {latitude,longitude} = coords\n                    setViewport({...viewport,latitude,longitude})\n                    setUserPosition({latitude,longitude})\n                },\n                (err)=>{\n                    if(err.code === 1) {\n                        setModal(true)\n                    }\n                    \n                },options\n            )\n        }\n    }\n\n    \nconst handleMapClick = (e) => {\n    setPopup(null)\n    const [lng, lat] = e.lngLat\n    const draft = {lng,lat} \n    dispatch({type:'CREATE_DRAFT',payload:draft})\n    \n}\nconsole.log(popUp)\n\nconst markerClick = (pin) => {\n    console.log('here')\n    dispatch({type:'DELETE_DRAFT'})\n    setPopup(pin)\n}\n\nconst clearWatch = ()=>{\n    if('geolocation' in navigator) {\n        const id =  navigator.geolocation.getCurrentPosition(\n             ({coords})=>{\n                const {latitude,longitude} = coords\n                 setViewport({...viewport,latitude,longitude})\n             },\n             (err)=>{\n                 if(err.code === 1) {\n                     setModal(true)\n                 }\n                 \n             },options\n         )\n     navigator.geolocation.clearWatch(id)\n     }\n}\n\nconst StopWatchLocation = async () => {\n    clearWatch()\n    const id = state.liveLocation._id\nconst variables = {\n    id\n}\nconst { deleteLiveLocation } = await Client.request(DELETE_LIVE_LOCATION_MUTATION,variables)\nsetPopup(null)\n\n\n}\n\n    if(modal) {\n        return(\n            <Modal>\n              <div className=\"modal-content\">\n                <div className=\"contents\">\n                <p className=\"title\">Sorry! We're unable to track your Location.</p>\n                <p className=\"desc\">Note: Everybody will be able to see your shared location!</p>\n                  </div>\n                  <div className=\"btn-group\">\n                  <button onClick={()=>setModal(false)}>Cancel</button>\n                  </div>\n                </div>\n            </Modal>\n        )\n    }\n    \n\n    return (\n        <div className=\"map\">\n        <ReactMapGL\n        {...viewport}\n        onClick={(e)=>handleMapClick(e)}\n        onViewportChange={newViewport => setViewport(newViewport)}\n        width=\"100vw\"\n        height=\"100vh\"\n        mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n        mapboxApiAccessToken=\"pk.eyJ1IjoibWl0aGxleGgiLCJhIjoiY2p4aWxxajZxMG5hYTNubnY2OWZ0MGljaiJ9.kdK80LecD6yKdEK0ASom6w\"\n        >\n        <div className=\"navigation\">\n        <NavigationControl\n        onViewportChange={newViewport => setViewport(newViewport)}></NavigationControl>\n        </div>\n\n        {userPosition && !state.liveLocation && (\n            <Marker latitude={userPosition.latitude} longitude={userPosition.longitude}>\n            <PinIcon icon={1} color={state.color} />\n            </Marker>\n        )}\n        {state.draftPin && (\n            <Marker latitude={state.draftPin.lat} longitude={state.draftPin.lng}  offsetTop={-20} offsetLeft={-10} >\n            <PinMarker  color={5} />\n                </Marker>\n        )}\n        \n        {state.pins && state.pins.map((pin)=>{\n            return(\n                <div key={pin._id} onClick={()=>markerClick(pin)} >\n                <Marker latitude={pin.location.coordinates[1]} longitude={pin.location.coordinates[0]}>\n                <PinIcon icon={pin.category} color={pin.color} />\n                </Marker>\n                </div>  \n            )\n        })}\n\n        {state.liveLocations && state.liveLocations.map((pin)=>{\n            return(\n                <div className=\"live-location\" key={pin._id} onClick={()=>markerClick(pin)} >\n                <Marker latitude={pin.location.coordinates[1]} longitude={pin.location.coordinates[0]}>\n                <PinIcon icon={pin.category} color={'red'} />\n                </Marker>\n                </div>  \n            )\n        })}\n        \n\n        \n\n{popUp &&(<Popup\n          latitude={popUp.location.coordinates[1]}\n          longitude={popUp.location.coordinates[0]}\n          closeButton={true}\n          closeOnClick={false}\n          onClose={() => {\n              setPopup(null)\n          }}\n          anchor=\"bottom\" >\n          <div style={{margin:'.5em 0',fontSize:'1em',fontWeight:'500'}}>{popUp.name}</div>\n        </Popup>)}\n        \n        </ReactMapGL>\n        {state.draftPin && (<button className=\"map-marked\" onClick={()=>{modalOpen()}}>\n        <MapMarkedIcon />\n        </button>)}\n        {userPosition && !state.liveLocation && (<button className=\"map-eye\" onClick={()=>{\n            dispatch({type:'DELETE_DRAFT'})\n            dispatch({type:'ADD_LIVE_LOCATION',payload:userPosition})\n            liveLocationModal()\n        }} >\n        <EyeIcon />\n        </button>)}\n        {state.liveLocation && state.liveLocation._id &&(<button className=\"map-eye\" onClick={()=>StopWatchLocation()} >\n        <EyeSlash />\n        </button>)}\n\n        <Subscription subscription={PIN_ADDED_SUBSCRIPTION} \n        onSubscriptionData={({subscriptionData})=>{\n            const {pinAdded} = subscriptionData.data\n            dispatch({type:'CREATE_PIN',payload:pinAdded})\n        }}\n        />\n        <Subscription subscription={LIVE_LOCATION_ADDED_SUBSCRIPTION} \n        onSubscriptionData={({subscriptionData})=>{\n            const {liveLocationAdded} = subscriptionData.data\n            dispatch({type:'ADD_LIVELOCATIONS',payload:liveLocationAdded})\n        }}\n        />\n        <Subscription subscription={LIVE_LOCATION_UPDATED_SUBSCRIPTION} \n        onSubscriptionData={({subscriptionData})=>{\n            const {liveLocationUpdated} = subscriptionData.data\n              dispatch({type:'UPDATE_LIVE_LOCATION',payload:liveLocationUpdated})\n        }}\n        />\n        <Subscription subscription={LIVE_LOCATION_DELETED_SUBSCRIPTION} \n        onSubscriptionData={({subscriptionData})=>{\n            const {liveLocationDeleted} = subscriptionData.data\n            dispatch({type:'DELETE_LIVE_LOCATIONS',payload:liveLocationDeleted._id})\n\n        }}\n        />\n        </div>\n    )\n}\n\nexport default Map","import React,{useState, useContext} from 'react';\nimport Map from '../components/map/index'\nimport Modal from '../components/modal'\nimport Context from '../context';\nimport Client from '../graphql/client'\nimport { CREATE_PIN_MUTATION, CREATE_LIVE_LOCATION_MUTATION, UPDATE_LIVE_LOCATION_MUTATION} from '../graphql/mutations'\nfunction Home() {\nconst { state,dispatch} = useContext(Context)\nconst [modal,setModal] = useState(false)\nconst [errModal,setErrModal] = useState(false)\nconst [liveLocation,setLiveLocation] = useState(false)\nconst [icon, setIcon] =useState(1)\nconst [allowLocation,setAllowLocation] = useState(false)\nconst [name,setName] = useState('')\nconsole.log(state)\nconst handleSubmit = async () => {\n  if(!name) return\n  const random = Math.random()*74;\n  const color = Math.round(Number(random))\n  // dispatch({type:'SET_ICON_AND_COLOR',payload:{icon:Number(icon),color}})\n  const {lng,lat} = state.draftPin\n  const variables = {\n    name,\n    color,\n    category:Number(icon),\n    type:'Point',\n    lng,\n    lat\n  }\n  const {createPin} = await Client.request(CREATE_PIN_MUTATION,variables)\n  console.log(createPin)\n\n  dispatch({type:'DELETE_DRAFT'})\n  setName('')\n  setIcon(1)\n  setModal(false)\n}\nconst handleLiveLocation = async () => {\n  if(!name) return\n  const random = Math.random()*74;\n  const color = Math.round(Number(random))\n  const {longitude,latitude} = state.liveLocation\n  const variables = {\n    name,\n    category:Number(icon),\n    type:'Point',\n    lng:longitude,\n    lat:latitude\n  }\n\n  const {addLiveLocation} = await Client.request(CREATE_LIVE_LOCATION_MUTATION,variables)\n  console.log('here',addLiveLocation)\n  \n  dispatch({type:'ADD_LIVE_LOCATION',payload:addLiveLocation})\n  dispatch({type:'DELETE_DRAFT'})\n  dispatch({type:'DESELECT_CURRENT_PIN'})\n  setName('')\n  setIcon(1)\n  setLiveLocation(false)\n  watchUserPosition(addLiveLocation._id)\n}\n\nconst watchUserPosition = (id) => {\n  if('geolocation' in navigator) {\n      navigator.geolocation.watchPosition(\n          async ({coords})=>{\n              console.log(coords)\n              const {latitude,longitude} = coords\n\n              const variables = {\n                id,\n                lng:longitude,\n                lat:latitude\n              };\n              \n              const {updateLiveLocation} = await Client.request(UPDATE_LIVE_LOCATION_MUTATION,variables)\n\n\n          },\n          (err)=>{\n              if(err.code === 1) {\n                setErrModal(true)\n              }\n          },{\n            enableHighAccuracy: true,\n            timeout: 5000,\n            maximumAge: 0\n          }\n      )\n  }\n}\n\nconst inputs = () => {\n  return(\n    <div>\n    <input name=\"name\" type=\"text\" placeholder=\"Name\" onChange={(e)=>setName(e.target.value)} value={name} />\n        <select onChange={(e)=>setIcon(e.target.value)}>\n        \n        <option value={1}>Person</option>\n        <option value={2}>Bike</option>\n        <option value={3}>Plane</option>\n        <option value={4}>Car</option>\n        <option value={5}>Bus</option>\n        <option value={6}>Home</option>\n        </select>\n        </div>\n  )\n}\n\nconst openModal = ()=>{\n  setModal(true)\n  setLiveLocation(false)\n}\nconst openLiveLocation = ()=>{\n  setModal(false)\n  setLiveLocation(true)\n}\n\nif(errModal) {\n  return(\n      <Modal>\n        <div className=\"modal-content\">\n          <div className=\"contents\">\n          <p className=\"title\">Sorry! We're unable to track your Location.</p>\n          <p className=\"desc\">Note: Everybody will be able to see your shared location!</p>\n            </div>\n            <div className=\"btn-group\">\n            <button onClick={()=>setErrModal(false)}>Cancel</button>\n            </div>\n          </div>\n      </Modal>\n  )\n}\n\n\nreturn(\n    <div>\n    {\n    modal && (\n        <Modal>\n        <div className=\"modal-content\">\n          <div className=\"contents\">\n        <p className=\"title\">Would you like to share this location?</p>\n        {inputs()}\n        <p className=\"desc\">Note: Everybody will be able to see your shared location!</p>\n          </div>\n          <div className=\"btn-group\">\n          <button onClick={()=>{\n            dispatch({type:'DELETE_DRAFT'})\n            setModal(false)\n          }}>Cancel</button>\n          <button onClick={()=>handleSubmit()}>Okay</button>\n          </div>\n          </div>\n          </Modal>\n    )\n    }\n    {\n     liveLocation && (\n          <Modal>\n          <div className=\"modal-content\">\n            <div className=\"contents\">\n          <p className=\"title\">Would you like to share your live location?</p>\n          {inputs()}\n          <p className=\"desc\">Note: Everybody will be able to see your shared location!</p>\n            </div>\n            <div className=\"btn-group\">\n            <button onClick={()=>{\n              dispatch({type:'DELETE_LIVE_LOCATION'})\n              setLiveLocation(false)\n            }}>Cancel</button>\n            <button onClick={()=>handleLiveLocation()}>Okay</button>\n            </div>\n            </div>\n            </Modal>\n      )\n      }\n    \n    <Map allowLoc={allowLocation} modalOpen={()=>openModal()} liveLocationModal={()=>openLiveLocation()} />\n    </div>\n)\n}\n\nexport default Home","export default function reducer(state,action){\n    switch (action.type) {\n        case 'SET_ICON_AND_COLOR':\n            return {...state,pinIcon:action.payload.icon,color:action.payload.color}\n        \n        case 'ALL_PINS':\n            return {...state,pins:action.payload}\n        case 'CREATE_PIN':\n            const newPin = action.payload\n            const prevPins = state.pins.filter((pin)=>pin._id !== newPin._id)\n            return {...state,pins:[...prevPins,newPin]}\n        case 'CREATE_DRAFT':\n            return {...state,draftPin:action.payload}\n        \n        case 'DELETE_DRAFT':\n            return {...state,draftPin:null}\n        \n        case 'CURRENT_PIN':\n            return {...state,currentPin:action.payload}\n        \n        case 'DESELECT_CURRENT_PIN':\n            return {...state,currentPin:null}\n        \n        case 'ADD_LIVE_LOCATION':\n            return {...state,liveLocation:action.payload}\n        case 'LIVE_LOCATIONS':\n            return {...state,liveLocations:action.payload}\n        case 'DELETE_LIVE_LOCATION':\n            return {...state,liveLocation:null}\n        case 'DELETE_LIVE_LOCATIONS':\n                const deletedLocation = action.payload\n                const LiveLocations = state.liveLocations.filter(location=>location._id !== deletedLocation)\n                return {...state,liveLocations:LiveLocations,liveLocation:null,currentPin:null,draftPin:null}\n\n\n        case 'ADD_LIVELOCATIONS':\n            const newLocation = action.payload\n            const prevLocations = state.liveLocations.filter((location)=>location._id !== newLocation._id)\n            return {...state,liveLocations:[...prevLocations,newLocation],currentPin:null,draftPin:null}\n        \n        case 'UPDATE_LIVE_LOCATION':\n            const updateLocation = action.payload\n            const updatedLiveLocations = state.liveLocations && state.liveLocations.length > 0 && state.liveLocations.map((location)=>{\n               if(location && location._id){\n                   return location._id === updateLocation._id ? location = updateLocation : location \n               }\n            })\n            return {...state,liveLocations:updatedLiveLocations}\n    \n        default:\n           return state;\n    }\n} ","import React, { useContext, useReducer } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from './pages/home'\nimport Context from './context'\nimport Reducer from './reducer'\n\nimport { ApolloProvider } from 'react-apollo'\nimport { ApolloClient } from 'apollo-client'\nimport { WebSocketLink } from 'apollo-link-ws'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { SubscriptionClient } from \"subscriptions-transport-ws\";\n\nconst GRAPHQL_ENDPOINT = \"ws://radiant-lake-34932.herokuapp.com/graphql\";\n\nconst wsLink = new SubscriptionClient(GRAPHQL_ENDPOINT, {\n  reconnect: true\n});\n\nconst link = new WebSocketLink(wsLink);\n\n// const wsLink = new WebSocketLink({\n//   uri: 'wss://localhost:4000/graphql',\n//   options: {\n//     reconnet: true\n//   }\n// })\n\nconst client = new ApolloClient({\n  link: link,\n  cache: new InMemoryCache()\n})\n\n\n\nfunction App() {\n  const initialState = useContext(Context)\n  const [state, dispatch] = useReducer(Reducer, initialState)\n  return (\n    <HashRouter>\n    <ApolloProvider client={client} >\n    <Context.Provider value={{state,dispatch}}>\n    <Switch>\n    <Route path=\"/\" component={Home} />\n    </Switch>\n    </Context.Provider>\n    </ApolloProvider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}